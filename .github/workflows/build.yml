# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
   # Run consumer validations
    - run: |
        npm i
        npm run test:consumer
   # Import results back to Xray (Server and Cloud)
    - name: "Import results to Xray (server/DC)"
      uses: mikepenz/xray-action@v2.3.0
      with:
         username: ${{ secrets.JIRASERVER_USERNAME }}
         password: ${{ secrets.JIRASERVER_PASSWORD }}
         xrayCloud: "false"
         xrayBaseUrl: ${{ secrets.JIRASERVER_BASE_URL }}
         testFormat: "junit"
         testPaths: "./test_results/junit_consumer.xml"
         testPlanKey: "${{ secrets.XRAYSERVER_TEST_PLAN_KEY }}"
         projectKey: "${{ secrets.JIRASERVER_PROJECT_KEY }}"
    - name: "Import results to Xray (cloud)"
      uses: mikepenz/xray-action@v2.3.0
      with:
         username: "${{ secrets.XRAYCLOUD_CLIENT_ID }}"
         password: "${{ secrets.XRAYCLOUD_CLIENT_SECRET }}"
         xrayCloud: "true"
         testFormat: "junit"
         testPaths: "./test_results/junit_consumer.xml"
         testPlanKey: "${{ secrets.XRAYCLOUD_TEST_PLAN_KEY }}"
         projectKey: "${{ secrets.JIRACLOUD_PROJECT_KEY }}"
